name: 'Terraform'
#
on:
  push:
    branches:
      - main
      - staging
      - develop
  pull_request:
    branches:
      - main
      - staging
      - develop

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terrascan_job:
    runs-on: ubuntu-latest
    name: 'Terraform SAST Scan'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Run Terrascan
      id: terrascan
      uses: tenable/terrascan-action@main
      with:
        iac_type: 'terraform'
        iac_dir: '/root'
        iac_version: 'v14'
        policy_type: 'aws'
        only_warn: true
        sarif_upload: true
        #non_recursive:
        #iac_dir:
        #policy_path:
        #skip_rules:
        #config_path:
        #webhook_url:
        #webhook_token:
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: terrascan.sarif

  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    needs: terrascan_job

    # Define environment based on the branch context
    environment: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.ref || github.ref_name }}

    # Prevent concurrent runs of the same workflow on the same branch
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ vars.TERRAFORM_VERSION }}

    - name: Terraform Init
      run: |
        cd root
        terraform init \
          -backend-config="../environments/${{ github.event_name == 'pull_request' && github.event.pull_request.base.ref || github.ref_name }}/backend.hcl"

    - name: Terraform Validate
      run: |
        cd root
        terraform validate

    - name: Terraform Plan
      id: plan
      run: |
        cd root
        terraform plan \
          -var-file="../environments/${{ github.event_name == 'pull_request' && github.event.pull_request.base.ref || github.ref_name }}/terraform.tfvars" \
          -out=tfplan

    - name: Add Plan Comment
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const output = require('child_process').execSync('cd root && terraform show tfplan').toString()
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '```terraform\n' + output + '\n```'
          })

    - name: Terraform Apply
      if: |
        github.event_name == 'push' &&
        (github.ref == 'refs/heads/develop' ||
         github.ref == 'refs/heads/staging' ||
         github.ref == 'refs/heads/main')
      run: |
        cd root
        terraform apply -auto-approve tfplan