# .github/workflows/terraform.yml

name: 'Terraform'

on:
  push:
    branches:
      - dev
      - prod
  pull_request:

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: ${{ github.event.pull_request.base.ref || github.ref_name }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ vars.TERRAFORM_VERSION }}
#      
    - name: Terraform Init
      run: |
        cd root
        terraform init \
          -backend-config="../environments/${{ github.event.pull_request.base.ref || github.ref_name }}/backend.hcl"

    - name: Terraform Validate
      run: |
        cd root
        terraform validate

    - name: Terraform Plan
      if: github.event_name == 'pull_request'
      run: |
        cd root
        terraform plan \
          -var-file="../environments/${{ github.event.pull_request.base.ref || github.ref_name }}/terraform.tfvars" \
          -out=tfplan
      
    - name: Add Plan Comment
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const output = require('child_process').execSync('cd root && terraform show -no-color tfplan').toString()
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '```terraform\n' + output + '\n```'
          })

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        cd root
        terraform apply -auto-approve \
          -var-file="../environments/${{ github.ref_name }}/terraform.tfvars"